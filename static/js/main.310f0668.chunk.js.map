{"version":3,"sources":["components/Logo/brain.jpg","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","components/Logo/Logo.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","className","onClick","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","console","log","this","htmlFor","onChange","type","name","href","Component","Register","onNameChange","onSubmitRegister","ImageLinkForm","onInputChange","onSubmit","Logo","options","max","height","width","alt","src","brain","paddingTop","Rank","entries","FaceRecognition","imageUrl","box","length","map","i","key","leftCol","top","topRow","right","rightCol","bottom","bottomRow","left","particlesParams","particles","line_linked","shadow","enable","color","blur","number","density","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","image","document","getElementById","Number","outputs","regions","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBox","box_array","count","Object","assign","catch","error","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.310f0668.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.87bc222e.jpg\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\tif(isSignedIn) {\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p className='f3 link dim black underline pa3 pointer' onClick={() => onRouteChange('signin')}>Sign out </p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\treturn(\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p className='f3 link dim black underline pa3 pointer' onClick={() => onRouteChange('signin')}>Sign In </p>\r\n\t\t\t\t<p className='f3 link dim black underline pa3 pointer' onClick={() => onRouteChange('register')}>Register </p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail : '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail : event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword : event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://cryptic-fortress-55562.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif(user.id){\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log('Wrong email or password')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { onRouteChange } = this.props;\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t<div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tonChange={this.onEmailChange} \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t        \tid=\"email-address\" \r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tonChange={this.onPasswordChange} \r\n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t        \tid=\"password\" \r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Sign in\" \r\n\t\t\t\t      \tonClick={this.onSubmitSignIn}/>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f5 link dim black db pointer\">Register</p>\r\n\t\t\t\t    </div>\r\n\t \t\t\t </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass Register extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value})\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value})\r\n\t}\r\n\r\n\tonSubmitRegister = () => {\r\n\t\tfetch('https://cryptic-fortress-55562.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: this.state.name,\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif(user.id){\r\n\t\t\t\t\tthis.props.loadUser(user)\r\n\t\t\t\t\tthis.props.onRouteChange('home')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log('Wrong email or password')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t\t<div className=\"measure\">\r\n\t\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t\t        <input \r\n\t\t\t\t\t        \tonChange={this.onNameChange}\r\n\t\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        \ttype=\"text\" \r\n\t\t\t\t\t        \tname=\"name\"  \r\n\t\t\t\t\t        \tid=\"name\" \r\n\t\t\t\t\t        />\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t\t        <input \r\n\t\t\t\t\t        \tonChange={this.onEmailChange}\r\n\t\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t\t        \tid=\"email-address\" \r\n\t\t\t\t\t        />\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t        <input \r\n\t\t\t\t\t        \tonChange={this.onPasswordChange}\r\n\t\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t\t        \tid=\"password\" \r\n\t\t\t\t\t        />\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </fieldset>\r\n\t\t\t\t\t    <div className=\"\">\r\n\t\t\t\t\t      <input \r\n\t\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t\t      \tvalue=\"Register\" \r\n\t\t\t\t\t      \tonClick={this.onSubmitRegister}/>\r\n\t\t\t\t\t    </div>\r\n\t\t \t\t\t </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n\treturn(\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This magic brain will detect faces in your pictures. Give it a try!'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input type='text' className='pa2 f4 w-70 center' onChange={onInputChange} />\r\n\t\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onSubmit}>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.jpg';\r\n \r\nconst Logo = () => {\r\n\treturn(\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 150, width: 150 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa3\"><img alt='logo' src={brain} className={{width:'100%', paddingTop:'5px'}}/> </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n\treturn(\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${name}, your current rank is: `}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn(\r\n\t\t<div className = 'center'>\r\n\t\t\t<div className='absolute mt2'>\t\r\n\t\t\t\t<img id='inputimage' src={imageUrl} alt='' width='500px' height='auto' />\r\n\t\t\t\t{ box.length > 0 ? \r\n\t\t\t\t\t\tbox.map((i) => <div className='bounding-box' key={i.leftCol} style={{top: i.topRow, right: i.rightCol, bottom: i.bottomRow, left: i.leftCol}}></div>) \r\n\t\t\t\t\t: ''\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\n\nconst particlesParams = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    },\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    \n    const clarifaiFace = data.outputs[0].data.regions.map(i => {\n      return i.region_info.bounding_box\n    })\n    \n    const box_array = clarifaiFace.map(i => {\n      return {\n        leftCol: i.left_col * width,\n        topRow: i.top_row * height,\n        rightCol: width - (i.right_col * width),\n        bottomRow: height - (i.bottom_row * height)\n      }\n    })\n    \n    return box_array\n  }\n\n  displayFaceBox = (box_array) => {\n    this.setState({\n      box: box_array\n    })\n  }\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n    //Here now we are making a call to our server to fetch the json output from Clarifai.\n    // We did this to hide API key when req is sent over network\n    fetch('https://cryptic-fortress-55562.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if(response) {\n          fetch('https://cryptic-fortress-55562.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n          .catch(console.error)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(error => console.log('You have an error:', error));\n  }  \n\n  onRouteChange = (route) => {\n    if(route === 'signin') {\n      this.setState(initialState)\n    }\n    else if(route === 'home'){\n      this.setState({isSignedIn: true})\n    } \n      this.setState({route: route})\n  }\n\n  render() {\n    const{ isSignedIn, imageUrl, route, box, user } = this.state;\n    return (\n    <div className=\"App\">\n      <Particles params = {particlesParams} className='particles' />\n      <Navigation onRouteChange = {this.onRouteChange} isSignedIn={isSignedIn} />\n      { route === 'home'\n        ? <>\n            <Logo />\n            <Rank name={user.name} entries={user.entries}/>\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n            <FaceRecognition imageUrl={imageUrl} box={box} />\n          </>\n          : ( route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n      }\n    </div>\n  );}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}